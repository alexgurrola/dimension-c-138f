# Configuration file

##########################################################################################################
# general
#--------------------------------------------------------------------------------------------------------#
# WEBSITE: https://mods.curse.com/mc-mods/minecraft/269359-tick-dynamic   <- Head here for the documentation, or if you have questions.
# ISSUE TRACKER: https://github.com/The-Fireplace/TickDynamic/issues   <- Go here if you have problems, log spam, or suggestions to improve the mod.
# 
# Slices are the way you control the time allotment to each world, and within each world, to Entities and TileEntities.
# Each tick the time for a tick(By default 50ms) will be distributed among all the worlds, according to how many slices they have.
# If you have 3 worlds, each with 100 slices, then each world will get 100/300 = ~33% of the time.
# So you can thus give the Overworld a maxSlices of 300, while giving the other two 100 each. This way the Overworld will get 60% of the time.
# 
# Of the time given to the world, this is further distributed to TileEntities and Entities according to their slices, the same way.
# TileEntities and Entities are given a portion of the time first given to the world, so their slices are only relative to each other within that world.If any group has unused time, then that time will be distributed to the remaining groups.
# So even if you give 1000 slices to TileEntities and 100 to Entities, as long as as TileEntities aren't using it's full time,
# Entities will be able to use more than 100 slices of time.
# 
# So the formula for slices to time percentage is: (singleGroupInWorld.maxSlices/combinedGroupsInWorld.maxSlices)*100
# 
# Note: maxSlices = 0 has a special meaning. It means that the group's time usage is accounted for, but not limited.
# Basically it can take all the time it needs, even if it goes above the parent maxTime, pushing its siblings down to minimumObjects.
##########################################################################################################

general {
    # How many ticks of data to use when averaging for time balancing.
    # A higher number will make it take regular spikes into account, however will make it slower to adjust to changes.
    I:averageTicks=20

    # Debug Group mapping and assignment. Will spam during world load and config reload!!!
    B:debugGroups=false

    # Debug output from time allocation and calculation. Warning: Setting this to true will cause a lot of console spam.
    # Only do it if developer or someone else asks for the output!
    B:debugTimer=false

    # The default maxSlices for a new automatically added world.
    I:defaultWorldSlicesMax=100
    B:enabled=true

    # Disables all log output to the console. Make sure this is off before providing the author with logs.
    B:nologs=false
}


##########################################################################################################
# groups
#--------------------------------------------------------------------------------------------------------#
# Groups define a list of Entities and/or TileEntities and the configuration for them.
# You can define the groups here, and they will automatically be part of every world.
# 
# If you wish to override the settings for a group in a specific world, you can simply include a group with the same name in the world,
# and then provide the new values. Any value you do not define will be read from the global group.
# So you can for example define a group for all Animal mobs, and define them to get less time than other Entities in all worlds,
# but then define them to get even less time in a certain world without having to re-define the list of Entities.
# 
# Note that the groups 'entity' and 'tileentity' are special groups. Any TileEntity or Entity which are not included in any other group,
# will be automatically included in these two groups.
##########################################################################################################

groups {

    entity {
        # Whether this group is enabled or not. If not, no Entity/TileEntity will be added to it.
        B:enabled=true

        # List of Entity/TileEntity class names(Ex: net.minecraft.tileentity.TileEntityDropper), for Entities that are to be included in this group.
        S:entityClassNames <
            
         >

        # List of Entity/Block names(Ex: Sheep / minecraft:furnace) who are to be included in this group.
        S:entityNames <
            
         >

        # Entity or TileEntity group
        S:groupType=Entity

        # Minimum number of objects to tick, independent of slices. Set to 0 to disable.
        I:minimumObjects=100

        # Minimum TPS to keep, independent of slices. Set to 0 to disable.
        D:minimumTPS=0.0

        # Minimum Time to keep(In milliseconds), independent of slices. Set to 0 to disable.
        D:minimumTime=0.0

        # List of mods to exclude. Will exclude every Entity or TileEntity from the specific mod, independent of 'entityClassNames' and 'entityNames'
        # 
        S:modId <
            
         >

        # The number of slices given to this Group
        I:slicesMax=100

        # Set the World time to the correct time for the TPS of this group.
        B:useCorrectedTime=true
    }

    players {
        # Whether this group is enabled or not. If not, no Entity/TileEntity will be added to it.
        B:enabled=true

        # List of Entity/TileEntity class names(Ex: net.minecraft.tileentity.TileEntityDropper), for Entities that are to be included in this group.
        S:entityClassNames <
            net.minecraft.entity.player.EntityPlayer
            net.minecraft.entity.player.EntityPlayerMP
         >

        # List of Entity/Block names(Ex: Sheep / minecraft:furnace) who are to be included in this group.
        S:entityNames <
            
         >

        # Entity or TileEntity group
        S:groupType=Entity

        # Minimum number of objects to tick, independent of slices. Set to 0 to disable.
        I:minimumObjects=100

        # Minimum TPS to keep, independent of slices. Set to 0 to disable.
        D:minimumTPS=0.0

        # Minimum Time to keep(In milliseconds), independent of slices. Set to 0 to disable.
        D:minimumTime=0.0

        # List of mods to exclude. Will exclude every Entity or TileEntity from the specific mod, independent of 'entityClassNames' and 'entityNames'
        # 
        S:modId <
            
         >

        # The number of slices given to this Group
        I:slicesMax=0

        # Set the World time to the correct time for the TPS of this group.
        B:useCorrectedTime=true
    }

    tileentity {
        # Whether this group is enabled or not. If not, no Entity/TileEntity will be added to it.
        B:enabled=true

        # List of Entity/TileEntity class names(Ex: net.minecraft.tileentity.TileEntityDropper), for Entities that are to be included in this group.
        S:entityClassNames <
            
         >

        # List of Entity/Block names(Ex: Sheep / minecraft:furnace) who are to be included in this group.
        S:entityNames <
            
         >

        # Entity or TileEntity group
        S:groupType=TileEntity

        # Minimum number of objects to tick, independent of slices. Set to 0 to disable.
        I:minimumObjects=100

        # Minimum TPS to keep, independent of slices. Set to 0 to disable.
        D:minimumTPS=0.0

        # Minimum Time to keep(In milliseconds), independent of slices. Set to 0 to disable.
        D:minimumTime=0.0

        # List of mods to exclude. Will exclude every Entity or TileEntity from the specific mod, independent of 'entityClassNames' and 'entityNames'
        # 
        S:modId <
            
         >

        # The number of slices given to this Group
        I:slicesMax=100

        # Set the World time to the correct time for the TPS of this group.
        B:useCorrectedTime=true
    }

}


worlds {
    # The time allotted to a tick in milliseconds. 20 Ticks per second means 50ms per tick.
    # This is the base time allotment it will use when balancing the time usage between worlds and objects.
    # You can set this to less than 50ms if you want to leave a bit of buffer time for other things, or don't want to use 100% cpu.
    I:tickTime=50

    dim0 {
        I:slicesMax=100

        entity {
            S:groupType=Entity
            I:slicesMax=100
        }

        tileentity {
            S:groupType=TileEntity
            I:slicesMax=100
        }

    }

    dim-1 {
        I:slicesMax=100
    }

    dim1 {
        I:slicesMax=100
    }

    dim144 {
        I:slicesMax=100
    }

    dim111 {
        I:slicesMax=100
    }

    dim73 {
        I:slicesMax=100
    }

    dim74 {
        I:slicesMax=100
    }

    dim-46 {
        I:slicesMax=100
    }

    dim-11325 {
        I:slicesMax=100
    }

    dim-9999 {
        I:slicesMax=100
    }

    dim4598 {
        I:slicesMax=100
    }

    dim-343800852 {
        I:slicesMax=100
    }

    dim-2 {
        I:slicesMax=100
    }

    dim2 {
        I:slicesMax=100
    }

    dim3 {
        I:slicesMax=100
    }

    dim5 {
        I:slicesMax=100
    }

    dim6 {
        I:slicesMax=100
    }

    dim7 {
        I:slicesMax=100
    }

    dim8 {
        I:slicesMax=100
    }

    dim9 {
        I:slicesMax=100
    }

    dim10 {
        I:slicesMax=100
    }

    dim11 {
        I:slicesMax=100
    }

    dim12 {
        I:slicesMax=100
    }

    dim13 {
        I:slicesMax=100
    }

    dim14 {
        I:slicesMax=100
    }

    dim15 {
        I:slicesMax=100
    }

    dim16 {
        I:slicesMax=100
    }

    dim17 {
        I:slicesMax=100
    }

    dim18 {
        I:slicesMax=100
    }

    dim19 {
        I:slicesMax=100
    }

    dim20 {
        I:slicesMax=100
    }

    dim21 {
        I:slicesMax=100
    }

    dim22 {
        I:slicesMax=100
    }

    dim23 {
        I:slicesMax=100
    }

    dim24 {
        I:slicesMax=100
    }

    dim25 {
        I:slicesMax=100
    }

    dim26 {
        I:slicesMax=100
    }

    dim27 {
        I:slicesMax=100
    }

    dim28 {
        I:slicesMax=100
    }

    dim29 {
        I:slicesMax=100
    }

    dim30 {
        I:slicesMax=100
    }

    dim31 {
        I:slicesMax=100
    }

    dim32 {
        I:slicesMax=100
    }

    dim33 {
        I:slicesMax=100
    }

    dim34 {
        I:slicesMax=100
    }

    dim35 {
        I:slicesMax=100
    }

    dim36 {
        I:slicesMax=100
    }

    dim37 {
        I:slicesMax=100
    }

    dim38 {
        I:slicesMax=100
    }

    dim39 {
        I:slicesMax=100
    }

    dim40 {
        I:slicesMax=100
    }

    dim41 {
        I:slicesMax=100
    }

    dim42 {
        I:slicesMax=100
    }

    dim43 {
        I:slicesMax=100
    }

    dim44 {
        I:slicesMax=100
    }

    dim45 {
        I:slicesMax=100
    }

    dim46 {
        I:slicesMax=100
    }

    dim47 {
        I:slicesMax=100
    }

    dim48 {
        I:slicesMax=100
    }

    dim49 {
        I:slicesMax=100
    }

    dim50 {
        I:slicesMax=100
    }

    dim51 {
        I:slicesMax=100
    }

    dim52 {
        I:slicesMax=100
    }

    dim53 {
        I:slicesMax=100
    }

    dim54 {
        I:slicesMax=100
    }

    dim55 {
        I:slicesMax=100
    }

    dim56 {
        I:slicesMax=100
    }

    dim57 {
        I:slicesMax=100
    }

    dim58 {
        I:slicesMax=100
    }

    dim59 {
        I:slicesMax=100
    }

    dim60 {
        I:slicesMax=100
    }

    dim61 {
        I:slicesMax=100
    }

    dim62 {
        I:slicesMax=100
    }

    dim63 {
        I:slicesMax=100
    }

    dim64 {
        I:slicesMax=100
    }

    dim65 {
        I:slicesMax=100
    }

    dim66 {
        I:slicesMax=100
    }

    dim67 {
        I:slicesMax=100
    }

    dim68 {
        I:slicesMax=100
    }

    dim69 {
        I:slicesMax=100
    }

    dim70 {
        I:slicesMax=100
    }

    dim71 {
        I:slicesMax=100
    }

    dim72 {
        I:slicesMax=100
    }

    dim75 {
        I:slicesMax=100
    }

    dim76 {
        I:slicesMax=100
    }

    dim77 {
        I:slicesMax=100
    }

    dim78 {
        I:slicesMax=100
    }

    dim79 {
        I:slicesMax=100
    }

    dim80 {
        I:slicesMax=100
    }

    dim81 {
        I:slicesMax=100
    }

    dim82 {
        I:slicesMax=100
    }

    dim83 {
        I:slicesMax=100
    }

    dim84 {
        I:slicesMax=100
    }

    dim85 {
        I:slicesMax=100
    }

    dim86 {
        I:slicesMax=100
    }

    dim87 {
        I:slicesMax=100
    }

    dim88 {
        I:slicesMax=100
    }

    dim89 {
        I:slicesMax=100
    }

    dim90 {
        I:slicesMax=100
    }

    dim91 {
        I:slicesMax=100
    }

    dim92 {
        I:slicesMax=100
    }

    dim93 {
        I:slicesMax=100
    }

    dim94 {
        I:slicesMax=100
    }

    dim95 {
        I:slicesMax=100
    }

    dim96 {
        I:slicesMax=100
    }

    dim97 {
        I:slicesMax=100
    }

    dim99 {
        I:slicesMax=100
    }

    dim100 {
        I:slicesMax=100
    }

    dim101 {
        I:slicesMax=100
    }

    dim102 {
        I:slicesMax=100
    }

    dim103 {
        I:slicesMax=100
    }

    dim104 {
        I:slicesMax=100
    }

    dim105 {
        I:slicesMax=100
    }

    dim106 {
        I:slicesMax=100
    }

    dim107 {
        I:slicesMax=100
    }

    dim108 {
        I:slicesMax=100
    }

    dim109 {
        I:slicesMax=100
    }

    dim110 {
        I:slicesMax=100
    }

}


